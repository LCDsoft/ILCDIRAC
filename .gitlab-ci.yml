before_script:
  - source /cvmfs/clicdp.cern.ch/software/git/2.13.2/x86_64-slc6-gcc7-opt/setup.sh
  - shopt -s extglob

stages:
  - install
  - unittest
  - manualdeploy
  - integration
  - create
  - deploy

variables:
  LCG_BUNDLE_VERSION: "2017-01-27"
  ILCDIRAC_VERSION: "v27r0-pre5"
  DIRAC_BRANCH: "rel-v6r17"

install:SL6:
  stage: install
  tags:
    - docker
  image: ilcdirac/slc6-base
  script:
    - cd ../
    - rm -rf !(ILCDIRAC) .installCache
    - mv ILCDIRAC ILCDIRAC_commit
    - mkdir ILCDIRAC; cd ILCDIRAC
    - mkdir installation; cd installation
    - wget -O dirac-install -np  https://raw.github.com/DIRACGrid/DIRAC/master/Core/scripts/dirac-install.py  --no-check-certificate
    - chmod +x dirac-install
    - ./dirac-install -V ILCDIRAC -r $ILCDIRAC_VERSION -g $LCG_BUNDLE_VERSION
    - rm -rf DIRAC
    - git clone https://github.com/DIRACGrid/DIRAC.git --single-branch -b $DIRAC_BRANCH DIRAC
    - rm -rf ILCDIRAC
    - mv ../../ILCDIRAC_commit ILCDIRAC
    - source bashrc
    - dirac-deploy-scripts
    - unset REQUESTS_CA_BUNDLE
    - pip install --upgrade pip
    - pip uninstall -y distribute
    - pip install --upgrade setuptools || echo "done"
    - pip install --upgrade setuptools_scm || echo "done scm"
    - pip install --upgrade pylint mock MySQL-python pytest-cov pytest-randomly
    - cd ..
  artifacts:
     paths:
       - installation
     expire_in: 2 hours
  retry: 2

install:CC7:
  stage: install
  except:
    - tags
  tags:
    - docker
  image: ilcdirac/cc7-base
  script:
    - cd ../
    - rm -rf !(ILCDIRAC) .installCache
    - mv ILCDIRAC ILCDIRAC_commit
    - mkdir ILCDIRAC; cd ILCDIRAC
    - mkdir installation; cd installation
    - wget -O dirac-install -np  https://raw.github.com/DIRACGrid/DIRAC/master/Core/scripts/dirac-install.py  --no-check-certificate
    - chmod +x dirac-install
    - ./dirac-install -V ILCDIRAC -r $ILCDIRAC_VERSION -g $LCG_BUNDLE_VERSION
    - rm -rf DIRAC
    - git clone https://github.com/DIRACGrid/DIRAC.git --single-branch -b $DIRAC_BRANCH DIRAC
    - rm -rf ILCDIRAC
    - mv ../../ILCDIRAC_commit ILCDIRAC
    - source bashrc
    - dirac-deploy-scripts
    - unset REQUESTS_CA_BUNDLE
    - pip install --upgrade pip
    - pip uninstall -y distribute
    - pip install --upgrade setuptools || echo "done"
    - pip install --upgrade setuptools_scm || echo "done scm"
    - pip install --upgrade pylint mock MySQL-python pytest-cov pytest-randomly
    - cd ..
  artifacts:
     paths:
       - installation
     expire_in: 2 hours
  retry: 2


unittest:SL6:
  stage: unittest
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:SL6
  image: ilcdirac/slc6-base
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-unittests.sh
  coverage: '/\d+\%\s*$/'
  artifacts:
     paths:
       - installation/ILCDIRAC/.coverage
       - installation/ILCDIRAC/htmlcov
     expire_in: 2 hours
  retry: 2


unittest:CC7:
  stage: unittest
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:CC7
  image: ilcdirac/cc7-base
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-unittests.sh
  coverage: '/\d+\%\s*$/'
  artifacts:
     paths:
       - installation/ILCDIRAC/.coverage
       - installation/ILCDIRAC/htmlcov
     expire_in: 2 hours
  retry: 2


pylint:SL6:
  stage: integration
  except:
    - tags
  dependencies:
   - install:SL6
  tags:
    - docker
  image: ilcdirac/slc6-base
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-pylint.sh
  retry: 2


pylint:CC7:
  stage: integration
  except:
    - tags
  tags:
    - docker
  image: ilcdirac/cc7-base
  dependencies:
    - install:CC7
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-pylint.sh
  retry: 2


cvmfstests:SL6:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:SL6
    - unittest:SL6
  image: ilcdirac/slc6-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - echo "mysql:x:0:0:MySQL Server:/var/lib/mysql:/bin/bash" >> /etc/passwd
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-cvmfstests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  retry: 2
  except:
    - branches@CLICdp/iLCDirac/ILCDIRAC


cvmfstests:SL6Prod:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:SL6
    - unittest:SL6
  image: ilcdirac/slc6-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - echo "mysql:x:0:0:MySQL Server:/var/lib/mysql:/bin/bash" >> /etc/passwd
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-cvmfstests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: false
  retry: 2
  only:
    - branches@CLICdp/iLCDirac/ILCDIRAC


cvmfstests:CC7:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:CC7
    - unittest:CC7
  image: ilcdirac/cc7-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - echo "mysql:x:0:0:MySQL Server:/var/lib/mysql:/bin/bash" >> /etc/passwd
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-cvmfstests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  retry: 2
  except:
    - branches@CLICdp/iLCDirac/ILCDIRAC



cvmfstests:CC7Prod:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:CC7
    - unittest:CC7
  image: ilcdirac/cc7-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - echo "mysql:x:0:0:MySQL Server:/var/lib/mysql:/bin/bash" >> /etc/passwd
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-cvmfstests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: false
  retry: 2
  only:
    - branches@CLICdp/iLCDirac/ILCDIRAC

setests:SL6:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:SL6
    - unittest:SL6
  image: ilcdirac/slc6-base
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - dirac-proxy-init --rfc <<< $CERT_PASSPHRASE
    - .gitlab-ci.d/run-setests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  retry: 2
  except:
    - branches@CLICdp/iLCDirac/ILCDIRAC


setests:SL6Prod:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:SL6
    - unittest:SL6
  image: ilcdirac/slc6-base
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - dirac-proxy-init --rfc <<< $CERT_PASSPHRASE
    - .gitlab-ci.d/run-setests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: false
  retry: 2
  only:
    - branches@CLICdp/iLCDirac/ILCDIRAC


setests:CC7:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:CC7
    - unittest:CC7
  image: ilcdirac/cc7-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - dirac-proxy-init --rfc <<< $CERT_PASSPHRASE
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-setests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: true
  retry: 2
  except:
    - branches@CLICdp/iLCDirac/ILCDIRAC

setests:CC7Prod:
  stage: integration
  except:
    - tags
  tags:
    - docker
  dependencies:
    - install:CC7
    - unittest:CC7
  image: ilcdirac/cc7-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - dirac-proxy-init --rfc <<< $CERT_PASSPHRASE
    - unset PYTHONOPTIMIZE
    - .gitlab-ci.d/run-setests.sh
  coverage: '/\d+\%\s*$/'
  allow_failure: false
  retry: 2
  only:
    - branches@CLICdp/iLCDirac/ILCDIRAC

compiledoc:
  stage: unittest
  tags:
    - docker
  image: ilcdirac/slc6-base
  dependencies:
    - install:SL6
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - source ../bashrc
    - unset REQUESTS_CA_BUNDLE
    - pip install sphinx==1.5.2
    - yum install -y which patch
    - rm -rf ILCDIRAC ## removes just the folder with the links
    - wget -O release.notes https://gitlab.cern.ch/CLICdp/iLCDirac/ILCDIRAC/raw/master/release.notes ## get release notes from the master
    - cd docs
    - export PYTHONPATH=$PWD/source:$PYTHONPATH
    - bash patchSphinx.sh
    - SPHINXOPTS=-wsphinxWarnings make completeDocumentation
    - if [ -s sphinxWarnings ]; then cat sphinxWarnings; echo "Warnings When Creating Doc"; exit 1; fi
    - mv build/html ../../../ilcdiracdoc
  artifacts:
    paths:
      - ilcdiracdoc
    expire_in: 2 hours
  allow_failure: true
  retry: 2

maketarballs:
  stage: create
  only:
    - tags@CLICdp/iLCDirac/ILCDIRAC
  tags:
    - docker
  dependencies:
    - install:SL6
  image: ilcdirac/cc7-extra
  script:
    - export HOME=/root/
    - cd installation/ILCDIRAC
    - if [ -d "ILCDIRAC" ]; then echo "ILCDIRAC links still present! Failing!"; exit 1; fi
    - source ../bashrc
    - dirac-proxy-init --rfc -x <<< $CERT_PASSPHRASE
    - dirac-configure -S ILC-Production -C dips://voilcdirac012.cern.ch:9135/Configuration/Server --SkipCAChecks
    - dirac-proxy-init --rfc <<< $CERT_PASSPHRASE
    - dirac-distribution -l ILCDIRAC -r $CI_COMMIT_TAG -D ../../ILCDIRACTars
  artifacts:
    paths:
      - ILCDIRACTars
    expire_in: 2 hours
  retry: 2


deploydoc:
  stage: deploy
  tags:
    - docker
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  only:
    - tags@CLICdp/iLCDirac/ILCDIRAC
  dependencies:
    - compiledoc
  variables:
    EOS_PATH: "/eos/project/l/lcd-web/www/doc/ilcdiracdoc/"
    CI_OUTPUT_DIR: "ilcdiracdoc"
  script:
    - deploy-eos
  before_script: []
  after_script: []
  retry: 2


docDev:
  stage: manualdeploy
  tags:
    - docker
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  when: manual
  dependencies:
    - compiledoc
    - unittest:SL6
  variables:
    EOS_PATH: "/eos/project/l/lcd-web/www/doc/ilcdiracdocDev/"
    CI_OUTPUT_DIR: "ilcdiracdoc"
  script:
    - mv installation/ILCDIRAC/htmlcov ilcdiracdoc/
    - deploy-eos
  before_script: []
  after_script: []
  retry: 2


docProd:
  stage: manualdeploy
  tags:
    - docker
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  only:
    - branches@CLICdp/iLCDirac/ILCDIRAC
  when: manual
  dependencies:
    - compiledoc
    - unittest:SL6
  variables:
    EOS_PATH: "/eos/project/l/lcd-web/www/doc/ilcdiracdoc/"
    CI_OUTPUT_DIR: "ilcdiracdoc"
  script:
    - mv installation/ILCDIRAC/htmlcov ilcdiracdoc/
    - deploy-eos
  before_script: []
  after_script: []
  retry: 2



deploytag:
  stage: deploy
  tags:
    - docker
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  only:
    - tags@CLICdp/iLCDirac/ILCDIRAC
  dependencies:
    - maketarballs
  variables:
    EOS_PATH: "/eos/project/l/lcd-web/www/ILCDIRACTars/"
    CI_OUTPUT_DIR: "ILCDIRACTars"
  script:
    - deploy-eos
  before_script: []
  after_script: []
  retry: 2
