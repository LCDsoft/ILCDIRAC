# $HeadURL$
# $Id$

Versions
{
  NextRelease 
  {
    #NEW: Now Mokka uses random seed for every job. Users can set their own seed.
    Core = 
    Interfaces = 
    Workflow = 
  }
  v1r11p2
  {
    #DELETE: do not need Configuration anymore
    Core = co_2010122002
    Interfaces = if_2010122002
    #FIX: take new interface of writestdhep into account
    Workflow = wo_2010122101
  }
  v1r11p1
  {
    Configuration = cs_2010072201
    #FIX: Bug in CombimedSoftware installation
    Core = co_2010122002
    #FIX: Several errors remained in PostGenSel module
    Interfaces = if_2010122002
    Workflow = wo_2010122002
  }
  v1r11p0
  {
    Configuration = cs_2010072201
    
    #NEW: added script to obtain list of available software: no need to use web page
    Core = co_2010122001
    
    #NEW: added PostGenSel step to allow "generator level" cuts
    Interfaces = if_2010122001
    Workflow =  wo_2010122001
    
  }
  v1r10p7
  {
    Configuration = cs_2010072201
  
    #CHANGE: All applications are also replicated to IN2P3-SRM
    Core = co_2010121301
    #CHANGE: jobindex in whizard can be anything
    #FIX: XML file for LCSIM is now a parameter in the Production API 
    Interfaces = if_2010121301
    #CHANGE: in whizard, when PYSTOP was called, application was still OK, now not anymore
    Workflow = wo_2010121301
  }
  v1r10p6
  {
    Configuration = cs_2010072201

    #FIX: TARSoft was failing installation of lcio
    Core = co_2010120802 
    
    Interfaces = if_2010120801
    
    Workflow = wo_2010120801
  }
  v1r10p5
  {
    Configuration = cs_2010072201

    #NEW: LCIO specific install: environment vars are set
    Core = co_2010120801 
    
    #CHANGE: Allowed models in Whizard for susy are slsqhh and chne
    Interfaces = if_2010120801
    
    #FIXME: bug fix in ApplicationScript
    Workflow = wo_2010120801
  }
  v1r10p4
  {
    Configuration = cs_2010072201
    Core = co_2010120101
    
    #NEW: allow choice of SUSY model in whizard
    Interfaces = if_2010120102
    Workflow =  wo_2010120101
  }
  v1r10p3
  {
    Configuration = cs_2010072201
    #CHANGE: added beam_ercoil and keep_initials as parameters
    Core = co_2010120101
    Interfaces = if_2010120101
 
    Workflow =  wo_2010112601

  }
  v1r10p2
  {
    Configuration = cs_2010072201
    Core = co_2010112501
    Interfaces = if_2010112401

    #FIX: Registration of file in FC failed because FC changed
    Workflow =  wo_2010112601
  }
  v1r10p1
  {
    Configuration = cs_2010072201
    
    #FIX: PrepareOptionsFile had a bug in Preparation of whizard.in
    Core = co_2010112501
    
    Interfaces = if_2010112401
    Workflow =  wo_2010112401
  }
  v1r10p0
  {
    Configuration = cs_2010072201

    #CHANGE: Whizard default .in file is now whizard.template.in, and is templated
    #CHANGE: Propagate the number of events and luminosity through productions
    Core = co_2010112401
    
    #NEW: Whizard step in DIRAC
    #CHANGE: Production and user job API takes parameters for whizard, to fill in the template
    #CHANGE: complete LCSIM step in production API: input and output are treated properly
    #CHANGE: Production details are available from web interface
    #NEW: SLIC Pandora step is in ProductionAPI
    Interfaces = if_2010112401
    
    #NEW: WhizardAnalysis module
    #CHANGE: UserLFN now uses current credentials to guess the VO: suitable for ILC and CALICE run
    #NEW: FailoverRequest module: publish requests and update file status in transformation system
    Workflow =  wo_2010112401
  }
  v1r9p0
  {
    Configuration = cs_2010072201

    # NEW: add resolveOFnames to change output files in production context
    # CHANGE: check that application software is not empty after untarring
    # NEW: script/dirac-ilc-add-whizard: define in DIRAC a new whizard version
    Core = co_2010102801
    
    # CHANGE: allow arguments in ApplicationScript. To be used for pyroot scripts
    # CHANGE: add IS_PROD to workflow parameters, for Production API only
    # NEW: Add possibility to get a file using its SRM path
    # FIXME: startFrom in mokka is 0 by default instead of 1.
    # NEW: SLICPandora step definition 
    Interfaces = if_2010102801

    # CHANGE: handle production context properly: input and output file names depend on prod ID and job ID
    # CHANGE: check that applications are actually there before running, and if not return an error.
    # NEW: GetSRMFile module: used to get a file given its SRM path. Useful to get a file that is not registered in the DIRAC FC.
    # NEW: RegisterOutputData: set the metadata flags for production data 
    # NEW: SLICPandora Module
    Workflow = wo_2010102801
  }

  v1r7p1
  {
    Configuration = cs_2010072201
     
    # CHANGE: add comments in created steering and xml
    # TODO: idem for SLIC and LCIM
    # FIXME: replace rstrip by replace in TARSoft.py
    Core = co_2010072601
    
    # CHANGE: Marlin does not need to be specified the inputslcio list, as it is taken from inputdata if mokka step is not run before
    # CHANGE: overload setBannedSites
    Interfaces = if_2010072601
    
    # FIXME: fix type error in MarlinAnalysis
    Workflow = wo_2010072601
  }
  
  v1r7p0
  {
    # FIXME: In UsersAndGroups, fix invalid import and method
    Configuration = cs_2010072201
    
    # CHANGE: In presubmissionchecks, check that outputpath, if used, does not contain /../, /./, or //, and does not end with /.
    # CHANGE: All applications now call the UserJobFinalization module, and setOutputData is ILC specific.
    # CHANGE: Check that outputdata and outputsandbox do not contain the same things and output data does not allow wildcard
    # FIXME: checks where not done properly, all things were not checked
    # FIXME: add TotalSteps in setROOT
    # CHANGE: allow to use LFNs for steering and xml files for Mokka and Marlin
    Interfaces = if_2010072201

  	# CHANGE: Reshuffle CombinedSoftwareInstallation so that we use the SharedArea
	# CHANGE: TARSoft: don't redownload the applications if they are already there. Had to do some tricks to manage slic folder name
	# TODO: what about LCSIM
  	# CHANGE: in TARSoft, use ReplicaManager if url does not start with http://
	# CHANGE: better check in SQLWrapper that TMP dir is properly created. Also do proper remove of TMP dir, whatever happened to the socket.
  	# CHANGE: better handling of SQLWrapper errors
  	# CHANGE: Add modules needed by UserJobFinalization
  	# CHANGE: adapt ProdutionData to ILC needs, basically removing everything
  	# CHANGE: To be able to use InputData, need to import InputDataResolution.
  	# CHANGE: dirac-ilc-add-sofware.py: now add to TarBallURL location the tar ball
  	# CHANGE: update detectOS after discussion with Hubert, comment out slc4 binary support
	Core = co_2010072202

	# CHANGE: handle return value of SQLWrapper in MokkaWrapper
	# CHANGE: check if input slcio is present for Marlin before running
	# CHANGE: add UserJobFinalization module, taken from LHCb
	# CHANGE: prepare for using InputData: find out where the files are on the fly and pass the full path to PrepareOptionsfiles
	Workflow = wo_2010072201
  }
  
  v1r6p2
  {
  # FIXME: tag was badly done, incorrect directory structure  
  ConfigurationSystem = cs_2010060201
  # FIXME: tag was badly done, incorrect directory structure 
  Interfaces = if_2010060202
  # FIXME: tag was badly done, incorrect directory structure 
  Core = co_2010060202
  # FIXME: tag was badly done, incorrect directory structure 
  Workflow = wo_2010060202
  # FIXME: tag was badly done, incorrect directory structure 
  DataManagementSystem = dm_2010060201
  }
  v1r6p1
  {
  ConfigurationSystem = cs_2010021501
  Interfaces = if_2010060201
  # FIXME: Core tag name was badly formed
  Core = co_2010060201
  Workflow = wo_2010060201
  DataManagementSystem = dm_2010041901
  }
  v1r6p0
  {
  	ConfigurationSystem = cs_2010021501
  	
    # FIXME: don't check if input gen file is local if it starts with LFN:
    # CHANGE: use elif statements
    Interfaces = if_2010060201
  
  	# FIXME: use try, except when untarring, allows for catching errors in tar ball, like CRC checks
  	# NEW: dirac-ilc-add-software, utility to add software in CS
  	Core = co_2910060201
  	
    # FIXME: SLIC, allow for multiple detector model sources
    # FIXME: in MokkaAnalysis, the provided gen file was never used
    # FIXME: idem, but outputFile was not used
    # FIXME: in lcsimanalysis, copy the alias.properties files only if specified
    # CHANGE: handle end of file reached in Mokka, avoid job declared as failed.
    # CHANGE: in Marlin if nb of events to process is not specified, use -1 i.e. all events.
    Workflow = wo_2010060201
    
    DataManagementSystem = dm_2010041901
  }
  
  v1r5p0
  {
	ConfigurationSystem = cs_2010021501
	
	# FIXME: in PrepareOptionFiles, fix case where no LCIOinputFile can be found in input xml
	# FIXME: idem, repair broken lcsim file
	# CHANGE: Take into account dependencies in installation phase.
	# CHANGE: Set convention that folder containing application is same as tar ball name minus .tar.gz and .tgz
	Core = co_2010050301

	# FIXME: Did not use input lcio in LCSIM
	Interfaces = if_2010050301

	# CHANGE: Get base folder  name based on CS content, allows for multiple version of the same software to run
	# FIXME: Running marlin: duplicated processors were not properly removed from MARLIN_DLL.
	Workflow = wo_2010050301
	
	DataManagementSystem = dm_2010041901
  }

  v1r4p0
  {
	ConfigurationSystem = cs_2010021501
	
	# CHANGE: add in PrepareOptionsFiles the relevant methods for SLIC and LCSIM
	# FIXME: fixes to the methods for Mokka and Marlin.
	Core = co_2010041901
	
	# CHANGE: add the relevant bits of code for the definition of SLIC and LCSIM jobs
	# CHANGE: add the possibility to run on mac files in mokka
	# NEW: add DiracILC with specification of preSubmissionChecks
	Interfaces = if_2010041901
	
	# CHANGE: add relevant workflow for SLIC and LCSIM
	Workflow = wo_2010041901

    # NEW: add DataManagementSystem, for dirac-dms-gridify-castor-file script
    DataManagementSystem = dm_2010041901
    
  }
  v1r3p0
  {
    ConfigurationSystem = cs_2010021501

	# CHANGE: add ilc-install.sh script 
	# FIXME: Fix PrepareOptions such that the parsing of options is done properly
	Core = co_2010033101
	
	# CHANGE: in ILCJob, possibility to run Mokka and Marlin in one job
    Interfaces = if_2010033101

    # FIXME: Finalize MokkaAnalysis and MarlinAnalysis
    Workflow = wo_2010033101
  }

  v1r2p0
  {
    ConfigurationSystem = cs_2010021501

    # FIXME: Correct passing options to WMS
    Interfaces = if_2010031501
    
    # FIXME: Fix MarlinAnalysis and MokkaAnalysis. In MokkaAnlysis, don't use mokka-wrapper.sh
    Workflow = wo_2010031501
    
    # CHANGE: rewrite of SQLwrapper
    Core = co_2010031501
  }
  
  v1r1p0
  {
   	# CHANGE: adapt UsersAndGroups to LCD : comment references to LFC
    ConfigurationSystem = cs_2010021501
    
    # CHANGE: finish dev of LCDJob
    Interfaces = if_2010022601
    
    # BUGFIX: Fix several bugs
    Workflow = wo_2010022601
    
    # CHANGE: start working on InputDataResolution
    Core = co_2010022601
  }
  
  # NEW: first release
  v1r0p0
  {
    # NEW: first import
    ConfigurationSystem = cs_2010021001

    # NEW: first import
    Core = co_2010021001
    
    # NEW: first import
    Interfaces = if_2010021001

    # NEW: first import
    Workflow = wo_2010021001
  }
}  